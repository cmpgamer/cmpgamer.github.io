---
layout: post
title:  "About CPSC350"
date:   2016-03-31 21:00:00
categories: CPSC350
color: blue
---
### Forewarning

Just a forewarning that this is a long post talking about the setup of the CPSC350 course. I am writing this because I will reference a lot of these topics later.

### About CPSC350 - Applications of Databases
So eventually with the Computer Science major at the University of Mary Washington, every student has to take CPSC350 Applications of Databases. This is a misnomer for many students because they think that this is a pure databases class. It is not. It is applying databases to skeleton code with modification or writing a web application from scratch.

The class is taught by Ron Zacharski. He wants the students to understand and remember the material because he know it will be useful for the future of all students who go though the class. Now I might be a bit more biased because I have helped Zacharski with his CPSC110H Intro to Computer Science and I have taken CPSC419 Data Mining with Zacharski. He really knows what he is talking about when compared to others. He wants all of his students to be successful rather than fail.

So that brings me to the topic about this post: "About CPSC350". Like I mentioned before, this class requires that students apply databases to web applications, whether if the assignment is skeleton code or if it has to be a web application built from the ground up. The class is broken up into teams based on how much experience a person has in a certain field. Since I knew Python and SQL well, I was one of the first picks for a team. In the first half of the semester, we ended up taking 4 RATs (Quizzes/Tests that Zacharski calls "Readiness Assessment Tests") and there were 3 Lightning rounds (Which are quick paced team activities to convert English to SQL queries). This half of the semester is based on SQL, ending with a SQL project that has 3 Sprints (formatted with Scrum). The second half of the semester is learning about different NoSQL databases like Cassandra and MongoDB.

### XP System
Zacharski sets up an Experience Point system for his grades. The more points you get, the higher your letter grade becomes. In the beginning, everyone starts at F but as the class goes on the letter grades and levels go up. It is designed so that the effort that you put into the class is what you get as a grade at the end of the semester. I love this system while other students don't.

##3 RATs
RATs seem to be an issue with many students because they have never thought of a quiz or test like how a RAT is structured. The first part of a RAT is an individual test and you can put 5 points spread across 5 answers. If you know answer A is correct, you'd put 5 points, but if you are unsure if C or E is correct, you can split the 5 points into 3 and 2. And if you really don't know the answer, you can put 1 point on each of the 5 answers. Personally I love RATs for this.

The second half of the RATs is taking the same individual test over with your team, but now you are handed a scratch off sheet. This sheet has 5 scratable areas for each of the 5 answer choices. There is a little star that you can uncover when you scratch the sheet and that shows that the answer is correct. If you don't get it right on the first try, the possible ammount of points from 5 goes down, each time until it is 1 point on the 4th scratch.

### Lightning Rounds
Lightning Rounds are the fun portion of the class, if you have a good team. I found these more to be experience gainers if people in your group were ahead and not stuck behind. Case in point with the last Lightning Round. My team was able to get 135 XP while another team in the other section of the class only got 25 XP. It's not a fair part of the class because if your team sucks, then you suffer. Luckily my team did not suck. If you have a good team, you will learn a lot about going from English sentences to SQL queries.

